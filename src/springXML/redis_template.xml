<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="
	   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd  
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 需要使用spring-data-redis.jar -->
	<context:property-placeholder location="classpath:redis.properties"
		ignore-unresolvable="true" />
		
	<!--   高版本 dbcp的修改日志显示：change "maxActive"  "maxTotal" 
		and "maxWait"  "maxWaitMillis" in all examples
	 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<!--
			<property name="maxActive" value="${redis.maxActive}" />
			<property name="maxWait" value="${redis.maxWait}" />
		-->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		
	</bean>
	<!-- redis集群配置 哨兵模式 -->
	<bean id="sentinelConfiguration"
		class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<!--这个值要和Sentinel中指定的master的值一致，不然启动时找不到Sentinel会报错的-->
				<property name="name" value="mymaster"/>
			</bean>
		</property>
		<!--这里是指定Sentinel的IP和端口,不是Master和Slave的-->
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel1.host}" />
					<constructor-arg name="port" value="${redis.sentinel1.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel2.host}" />
					<constructor-arg name="port" value="${redis.sentinel2.port}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${redis.sentinel3.host}" />
					<constructor-arg name="port" value="${redis.sentinel3.port}" />
				</bean>
			</set>
		</property>
	</bean>
	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" 
		p:port="${redis.port}" 
		p:password="${redis.password}"
		p:pool-config-ref="poolConfig">
		<constructor-arg name="sentinelConfig" ref="sentinelConfiguration" />
	</bean>

	<!-- 使用spring-data-redis RedisTemplate和StringRedisTemplate区别不大-->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<!-- 开启事务，可以通过transcational注解控制 -->
		<property name="enableTransactionSupport" value="true" />
		<!-- 
			如果不配置Serializer，那么存储的时候只能使用String，
			如果用Object类型存储，那么会提示错误Object can't cast to String！！！
 		--> 
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashKeySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>
	
</beans>